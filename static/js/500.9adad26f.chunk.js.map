{"version":3,"file":"static/js/500.9adad26f.chunk.js","mappings":"6NAEaA,E,QAAeC,GAAAA,IAAH,iN,qECoCzB,EA5BqB,WACnB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAgBF,EAAAA,EAAAA,IAAYG,EAAAA,IAClC,GAAkCC,EAAAA,EAAAA,YAAWC,EAAAA,IAArCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YACZC,EAAaC,QAAQH,GAM3B,OAJAI,EAAAA,EAAAA,YAAU,WACR,OAAO,kBAAMH,EAAY,KAAlB,CACR,GAAE,CAACA,IAECR,GAGH,UAACL,EAAD,WACGc,IAAc,SAAC,IAAD,IACdN,EAAgB,GACf,UAAC,cAAD,CAAwBS,MAAO,CAAEd,OAAAA,EAAQC,UAAAA,GAAzC,WACE,SAAC,KAAD,KACA,SAAC,KAAD,QAGF,SAAC,KAAD,QAXiB,SAAC,KAAD,CAAUc,GAAG,IAAIC,SAAO,GAehD,C","sources":["pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsMain = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 12px;\n  padding-right: 0;\n  padding-top: 55px;\n  padding-bottom: 48px;\n  height: 100%;\n`;\n","import { SearchForm, ContactList, EmptyContactList } from 'components';\nimport { ContactsMain } from './ContactsPage.styled';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\nimport { useSelector } from 'react-redux';\nimport { FilterContext, FormContext } from 'servises/Context';\nimport { useState, useContext, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { selectContactsCount } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components';\n\nconst ContactsPage = () => {\n  const [filter, setFilter] = useState('');\n  const isLogedIn = useSelector(selectIsLoggedIn);\n  const contactsCount = useSelector(selectContactsCount);\n  const { formType, setFormType } = useContext(FormContext);\n  const isFormOpen = Boolean(formType);\n\n  useEffect(() => {\n    return () => setFormType(null);\n  }, [setFormType]);\n\n  if (!isLogedIn) return <Navigate to=\"/\" replace />;\n\n  return (\n    <ContactsMain>\n      {isFormOpen && <ContactForm />}\n      {contactsCount > 0 ? (\n        <FilterContext.Provider value={{ filter, setFilter }}>\n          <SearchForm />\n          <ContactList />\n        </FilterContext.Provider>\n      ) : (\n        <EmptyContactList />\n      )}\n    </ContactsMain>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactsMain","styled","useState","filter","setFilter","isLogedIn","useSelector","selectIsLoggedIn","contactsCount","selectContactsCount","useContext","FormContext","formType","setFormType","isFormOpen","Boolean","useEffect","value","to","replace"],"sourceRoot":""}