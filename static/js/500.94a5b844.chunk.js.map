{"version":3,"file":"static/js/500.94a5b844.chunk.js","mappings":"mNAEaA,E,QAAeC,GAAAA,IAAH,uH,qECgCzB,EAzBqB,WACnB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAgBF,EAAAA,EAAAA,IAAYG,EAAAA,IAC5BC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,IAECL,GAGH,SAACF,EAAD,UACGK,EAAgB,GACf,iCACE,SAAC,KAAD,KACA,SAAC,KAAD,QAGF,SAAC,KAAD,OAViB,SAAC,KAAD,CAAUM,GAAG,IAAIC,SAAO,GAchD,C,gFChCM,IAAMR,EAAmB,SAAAS,GAAK,OAAIA,EAAMC,KAAKC,UAAf,EAExBC,EAAa,SAAAH,GAAK,OAAIA,EAAMC,KAAKG,IAAf,C","sources":["pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx","redux/auth/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsMain = styled.div`\n  position: relative;\n  display: flex;\n  gap: 12px;\n  padding: 12px;\n  padding-top: 55px;\n`;\n","import { SearchForm, ContactList, EmptyContactList } from 'components';\nimport { ContactsMain } from './ContactsPage.styled';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Navigate } from 'react-router-dom';\nimport { selectContactsCount } from 'redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const isLogedIn = useSelector(selectIsLoggedIn);\n  const contactsCount = useSelector(selectContactsCount);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (!isLogedIn) return <Navigate to=\"/\" replace />;\n\n  return (\n    <ContactsMain>\n      {contactsCount > 0 ? (\n        <>\n          <SearchForm />\n          <ContactList />\n        </>\n      ) : (\n        <EmptyContactList />\n      )}\n    </ContactsMain>\n  );\n};\n\nexport default ContactsPage;\n","export const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n\nexport const selectIsLoading = state => state.auth.isLoading;\n\nexport const selectError = state => state.auth.error;\n"],"names":["ContactsMain","styled","isLogedIn","useSelector","selectIsLoggedIn","contactsCount","selectContactsCount","dispatch","useDispatch","useEffect","fetchContacts","to","replace","state","auth","isLoggedIn","selectUser","user"],"sourceRoot":""}