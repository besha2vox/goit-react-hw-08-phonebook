{"version":3,"file":"static/js/500.38bce97e.chunk.js","mappings":"qQAEaA,E,QAAeC,GAAAA,IAAH,sJ,SC4BzB,EAvBqB,WACnB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCC,EAAAA,EAAAA,YAAWC,EAAAA,IAArCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YACZC,EAAaC,QAAQH,GACrBI,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAM9B,OAJAC,EAAAA,EAAAA,YAAU,WACR,OAAO,kBAAMN,EAAY,KAAlB,CACR,GAAE,CAACA,IACJO,QAAQC,IAAIL,GACRA,GAAkB,SAAC,KAAD,KAGpB,UAACX,EAAD,WACGS,IAAc,SAAC,IAAD,KACf,UAAC,cAAD,CAAwBQ,MAAO,CAAEd,OAAAA,EAAQC,UAAAA,GAAzC,WACE,SAAC,KAAD,KACA,SAAC,KAAD,SAIP,C","sources":["pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactsMain = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 50px 12px 0 0;\n  height: 100%;\n`;\n","import { FilterContext, FormContext } from 'servises/Context';\nimport { useState, useContext, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/auth/selectors';\nimport { SearchForm, ContactList, ContactForm, Loader } from 'components';\nimport { ContactsMain } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const [filter, setFilter] = useState('');\n  const { formType, setFormType } = useContext(FormContext);\n  const isFormOpen = Boolean(formType);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    return () => setFormType(null);\n  }, [setFormType]);\n  console.log(isLoading);\n  if (isLoading) return <Loader />;\n\n  return (\n    <ContactsMain>\n      {isFormOpen && <ContactForm />}\n      <FilterContext.Provider value={{ filter, setFilter }}>\n        <SearchForm />\n        <ContactList />\n      </FilterContext.Provider>\n    </ContactsMain>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactsMain","styled","useState","filter","setFilter","useContext","FormContext","formType","setFormType","isFormOpen","Boolean","isLoading","useSelector","selectIsLoading","useEffect","console","log","value"],"sourceRoot":""}